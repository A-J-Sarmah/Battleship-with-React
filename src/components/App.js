import Navbar from "./Navbar";
import Board from "./Board";
import Button from "./Button";
import Ships from "./Ships";
import { useState, useEffect } from "react";

function App() {
  const [userData, setUserData] = useState([]);
  const [computerData, setComputerData] = useState([]);
  const [isPlaying, setIsPlaying] = useState(false);
  const [isWon, setIsWon] = useState(false);
  const [winner, setWinner] = useState(null);
  useEffect(() => {
    checkWin(userData, computerData);
    // code for testing purpose checks if a duplicate item exist in the array generated by the computer as ships
    // const findDuplicates = (arr) => {
    //   let sorted_arr = arr.slice().sort();
    //   let results = [];
    //   for (let i = 0; i < sorted_arr.length - 1; i++) {
    //     if (sorted_arr[i + 1] === sorted_arr[i]) {
    //       results.push(sorted_arr[i]);
    //     }
    //   }
    //   return results;
    // };
    // console.log(findDuplicates(computerData));
  }, [userData, computerData]);
  //clicking the pieces in the board
  function clickBoard(id) {
    if (isPlaying) {
      const box = document.getElementById(id);
      if (!box.classList.contains("used")) {
        if (box.classList.contains("occupied")) {
          box.style.backgroundColor = "#dc3545";
          box.classList.add("used");
          const index = computerData.indexOf(parseInt(id) - 100);
          let shipPosition = [...computerData];
          shipPosition.splice(index, 1);
          setComputerData(shipPosition);
        } else {
          box.style.backgroundColor = "#343a40";
          box.classList.add("used");
        }
        computerClickBoard();
      }
    }
  }
  //setting the computer data
  function getComputerData() {
    const position = [];
    const shipArrangment = [2, 3, 3, 4, 5];
    const numberOfShip = 5;
    for (let i = 0; i < numberOfShip; i++) {
      const ship = shipArrangment[i];
      let number = null;
      while (true) {
        number = Math.floor(Math.random() * 99);
        const element1 = document.getElementById(String(number + 100));
        const element2 = document.getElementById(String(number + 100 + 1));
        const element3 = document.getElementById(String(number + 100 + 2));
        const element4 = document.getElementById(String(number + 100 + 3));
        const element5 = document.getElementById(String(number + 100 + 4));
        if (
          !!element1 &&
          !!element2 &&
          !!element3 &&
          !!element4 &&
          !!element5
        ) {
          if (
            !element1.classList.contains("occupied") &&
            !element2.classList.contains("occupied") &&
            !element3.classList.contains("occupied") &&
            !element4.classList.contains("occupied") &&
            !element5.classList.contains("occupied")
          ) {
            break;
          }
        }
      }
      let turns = number;
      for (let i = 0; i < ship; i++) {
        const element = document.getElementById(String(turns + 100));
        element.classList.add("occupied");
        position.push(turns);
        turns++;
      }
    }
    setComputerData(position);
  }
  //get userData from the DOM
  function getUserData(list) {
    setUserData([...userData, ...list]);
  }
  // setting the game status
  function setGameState(status) {
    setIsPlaying(status);
  }
  //rotate the ship
  function rotateShips() {
    const ship = document.querySelectorAll(".ship");
    ship.forEach((element) => {
      if (element.style.display === "block") {
        element.style.display = "flex";
      } else if (element.style.display === "flex") {
        element.style.display = "block";
      } else {
        element.style.display = "flex";
      }
    });
  }
  //checks if a player won the game
  function checkWin(userArr, computerArr) {
    if (isPlaying) {
      if (userArr.length === 0 && computerArr.length !== 0) {
        setIsWon(true);
        setWinner("Computer");
      } else if (userArr.length !== 0 && computerArr.length === 0) {
        setIsWon(true);
        setWinner("You");
      } else {
        setIsWon(false);
      }
    }
  }
  //computer Playing it's move
  function computerClickBoard() {
    if (isPlaying) {
      let number = null;
      while (true) {
        number = Math.floor(Math.random() * 99);
        const element = document.getElementById(String(number));
        if (!element.classList.contains("used")) {
          break;
        }
      }
      const box = document.getElementById(String(number));
      if (box.classList.contains("occupied")) {
        box.classList.remove("bg-secondary");
        box.style.backgroundColor = "#dc3545";
        box.classList.add("used");
        const index = userData.indexOf(number);
        let shipPosition = [...userData];
        shipPosition.splice(index, 1);
        setUserData(shipPosition);
      } else {
        box.style.backgroundColor = "#343a40";
        box.classList.add("used");
      }
    }
  }
  //game reset
  function gameReset() {
    for (let i = 0; i < 200; i++) {
      const element = document.getElementById(String(i));
      if (element.classList.contains("occupied")) {
        element.classList.remove("occupied");
      }
      if (element.classList.contains("used")) {
        element.classList.remove("used");
      }
      if (element.classList.contains("bg-secondary")) {
        element.classList.remove("bg-secondary");
      }
      element.style.backgroundColor = null;
    }
    const element1 = document.getElementById("destroyer").childNodes;
    const element2 = document.getElementById("cruiser").childNodes;
    const element3 = document.getElementById("submarine").childNodes;
    const element4 = document.getElementById("battleship").childNodes;
    const element5 = document.getElementById("carrier").childNodes;
    const arr = [element1, element2, element3, element4, element5];
    for (let i = 0; i < arr.length; i++) {
      const element = arr[i];
      element.forEach((e) => {
        e.style.display = "block";
      });
    }
    setUserData([]);
    setComputerData([]);
    setIsPlaying(false);
    setIsWon(false);
    setWinner(null);
  }
  return (
    <>
      <Navbar></Navbar>
      <Board
        getUserData={getUserData}
        clickBoard={clickBoard}
        computerClickBoard={computerClickBoard}
        isWon={isWon}
        winner={winner}
      ></Board>
      <Button
        rotate={rotateShips}
        gameStatus={isPlaying}
        setGameStatus={setGameState}
        getComputerData={getComputerData}
        isWon={isWon}
        winner={winner}
        reset={gameReset}
      ></Button>
      <Ships gameStatus={isPlaying} isWon={isWon}></Ships>
    </>
  );
}

export default App;
